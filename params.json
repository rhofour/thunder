{"name":"Thunder","tagline":"Large-scale neural data analysis with Spark","body":"### Factor Analysis in Thunder (A CMU 15-418 Final Project)\r\nOur goal for this project is to implement factor analysis in the distributed machine learning framework Thunder.\r\n\r\n### Background\r\nModern data analysis (especially of neural data) often involves data with 100+ dimensions which are difficult to analyze as-is. To makes sense of this high dimensional data we often assume it comes from a much lower dimensional data. To find this lower dimensional data we perform one of several dimensionality reduction algorithms such as Factor Analysis.\r\n\r\nThere are already several tools available for performing factor analysis, however we're unaware of any which scale well when the data we're interested in doesn't fit in memory on a single machine. However, with newer methods of data collection such as optogenetic methods we're easily able to collect datasets on the order of 100GB-1TB.\r\n\r\nThunder is a data analysis framework built on top of Apache Spark designed for working with these kinds of datasets. The idea behind using Thunder is that if we can keep the data we're interested in distributed across the main memory of several machines and avoid reading and writing to disk then we can perform analyses much in much less time.\r\n\r\n### The Challenge\r\nTBD\r\n\r\n### Resources\r\nTBD\r\n\r\n### Goals and Deliverables\r\nAn implementation of factor analysis in Thunder which is able to outperform an optimized implementation on a single machine.\r\n\r\n### Platform Choice\r\nTDB (either EC2 or Latedays)\r\n\r\n### Schedule\r\nTBD\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}